'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = chromeProcessesRunning;

var _child_process = require('child_process');

function grepProcessByPattern(pattern) {
  return new Promise(resolve => {
    const ps = (0, _child_process.spawn)('ps', ['aux']);
    const grep = (0, _child_process.spawn)('egrep', ['-i', pattern]);
    ps.stdout.on('data', data => grep.stdin.write(data));
    ps.on('close', () => grep.stdin.end());
    let matchingProcesses = false;
    grep.stdout.on('data', data => {
      const result = data.toString();
      if (result.length) {
        matchingProcesses = result.split('\n').filter(i => !!i);
      }
    });
    grep.on('close', () => {
      resolve(matchingProcesses);
    });
  });
}

function chromeProcessesRunning() {
  return Promise.all([
  // bit fragile to match across platforms..
  // also fragile relying on ~internal chrome headless process arguments to
  // distinguish between browser and page instances
  grepProcessByPattern('/[c]hrom(e|ium) --disable-background'), grepProcessByPattern('/[c]hrom(e|ium) --type=renderer')]).then(([browsers, pages]) => {
    return {
      browsers,
      pages
    };
  });
}